workflows:
  version: 2
  build-dev: # ignore all normal git branches (untagged)
    jobs:
      - init:
          filters:
            branches:
              only: /^develop.*/
            tags:
              ignore: /.*/
      - deploy-dev:
          requires: 
            - init
  build-live: # ignore all normal git branches (untagged)
    jobs:
      - init:
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      - deploy-live:
          requires: 
            - init


version: 2
jobs:
  init:
    working_directory: ~/app
    docker:
      - image: circleci/android:api-26-ndk-r17b
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout # checkout source codes
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: 'Preparing for APK Signing'
          command: |
              # download keystore when building live version
              ls
              curl -L -o release.keystore "${KEYSTORE_URL}"
              curl -L -o gradle.properties "${GRADLE_PROP_URL}"
      - save_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          paths:
            - ~/.gradle
      - persist_to_workspace:
          root: .
          paths:
            - .
            
  deploy-dev:
    working_directory: ~/app
    docker:
      - image: circleci/android:api-26-ndk-r17b
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: 'Deploying to Deploygate'
          command: |
              echo 'Deploying to DeployGate'
              ls
              ./gradlew assembleDebug
  
  deploy-live:
    working_directory: ~/app
    docker:
      - image: circleci/android:api-26-ndk-r17b
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: 'Deploying to Playstore'
          command: |
              echo 'Deploying to Playstore'
              ./gradlew assembleRelease
      
                